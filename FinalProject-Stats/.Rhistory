str(video_df)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(infer)
library(psych)
library(httr)
library(jsonlite)
library(here)
#Get the videos csv
raw_video_df <- read_csv(file="https://raw.githubusercontent.com/georg4re/ds606/main/data/USvideos.csv",quote = "\"")
#get the categories JSON
url <- paste("https://raw.githubusercontent.com/georg4re/ds606/main/data/US_category_id.json", sep="")
res <- GET(url)
data <- fromJSON(rawToChar(res$content))
category_df <- data$items %>%
flatten(.) %>%
rename(category=snippet.title)
category_df <- category_df %>%
rename(category_id = id)
category_df$category_id <- as.numeric(category_df$category_id)
video_df <- raw_video_df %>%
left_join(category_df) %>%
select(video_id,
trending_date,
title,
channel_title,
category,
publish_time,
tags,
views,
likes,
dislikes,
comment_count,
comments_disabled,
ratings_disabled,
video_error_or_removed,
description
)
str(video_df)
video_categories <- video_df %>%
group_by(category) %>%
summarise(
views_sum = sum(views),
likes_sum = sum(likes),
dislikes_sum = sum(dislikes)) %>%
arrange(desc(views_sum))
knitr::kable(video_categories)
ggplot(video_categories, aes(factor(category), likes_sum, fill = category)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(video_categories, aes(y=factor(category), x=likes_sum, fill = category)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
ggplot(video_categories, aes(y=reorder(factor(category), likes_sum), x=likes_sum, fill = category)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set1") +
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
View(video_categories)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(scales)
library(infer)
library(psych)
library(httr)
library(jsonlite)
library(here)
#Get the videos csv
raw_video_df <- read_csv(file="https://raw.githubusercontent.com/georg4re/ds606/main/data/USvideos.csv",quote = "\"")
#get the categories JSON
url <- paste("https://raw.githubusercontent.com/georg4re/ds606/main/data/US_category_id.json", sep="")
res <- GET(url)
data <- fromJSON(rawToChar(res$content))
category_df <- data$items %>%
flatten(.) %>%
rename(category=snippet.title)
category_df <- category_df %>%
rename(category_id = id)
category_df$category_id <- as.numeric(category_df$category_id)
video_df <- raw_video_df %>%
left_join(category_df) %>%
select(video_id,
title,
category,
tags,
views,
likes,
dislikes,
comment_count
)
glimpse(video_df)
knitr::kable(head(video_df,10))
summary(video_df)
describe(video_df %>% select(views, likes, dislikes))
ggplot(video_df, aes(x=views, y=likes, color = category)) +
geom_point(shape=1)
video_categories <- video_df %>%
group_by(category) %>%
summarise(
views_sum = sum(views),
likes_sum = sum(likes),
dislikes_sum = sum(dislikes)) %>%
arrange(desc(likes_sum))
knitr::kable(video_categories)
ggplot(video_categories
, aes(y=reorder(factor(category), likes_sum),
x=likes_sum,
fill = category)) +
geom_bar(stat="identity", position = "dodge") +
scale_fill_brewer(palette = "Set2")
cat_frequency <- table(video_df$category)%>%
as.data.frame() %>%
arrange(desc(Freq))
knitr::kable(cat_frequency)
cat_prop <- prop.table(table(video_df$category))
knitr::kable(cat_prop %>%
as.data.frame() %>%
arrange(desc(Freq)))
video_categories <- video_categories %>%
mutate(likes_prop = likes_sum /(sum(likes_sum)), total_likes=sum(likes_sum))
knitr::kable(video_categories)
cat_df <- cat_prop %>%
as.data.frame()%>%
rename(category = Var1,
prop = Freq)
video_categories <- video_categories %>%
left_join(cat_df) %>%
mutate(expected = total_likes * prop)
knitr::kable(video_categories)
k <- 16  #16 categories
df <- k - 1
chi.Sq <- 0
for(i in 1:16)
{
chi.Sq <- chi.Sq + ((video_categories$likes_sum[i] - video_categories$expected[i])^2 / video_categories$expected[i])
}
p.Value <- pchisq(chi.Sq, df=df, lower.tail=FALSE)
paste('p-value is ',p.Value )
video_df$category.f <- factor(video_df$category)  ###Turn the category into a factor to use with lm
lm_output <- lm(likes ~ category.f, data = video_df)
video_df$category.f <- factor(video_df$category)  ###Turn the category into a factor to use with lm
lm_output <- lm(likes ~ category.f, data = video_df)
ggplot(video_df,
aes(x = category.f,
y = likes_sum)) +
geom_point(color="cornflowerblue",
size = 2,
alpha=.8) +
scale_y_continuous(label = scales::label_number(scale=1/10000)) +
ggplot(video_df,
aes(x = category.f,
y = likes_sum)) +
geom_point(color="cornflowerblue",
size = 2,
alpha=.8) +
scale_y_continuous(label = scales::label_number(scale=1/10000))
View(video_df)
ggplot(video_df,
aes(x = category.f,
y = likes)) +
geom_point(color="cornflowerblue",
size = 2,
alpha=.8) +
scale_y_continuous(label = scales::label_number(scale=1/10000))
ggplot(plotdata,
aes(x = factor(category),
y = likes,
fill = factor(category))) +
geom_bar(stat = "identity",
position = "fill") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
scale_fill_brewer(palette = "Set2") +
labs(y = "Percent",
fill = "Drive Train",
x = "Class",
title = "Automobile Drive by Class") +
theme_minimal()
ggplot(video_df,
aes(x = factor(category),
y = likes,
fill = factor(category))) +
geom_bar(stat = "identity",
position = "fill") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = lbl),
size = 3,
position = position_stack(vjust = 0.5)) +
scale_fill_brewer(palette = "Set2") +
labs(y = "Percent",
fill = "Drive Train",
x = "Class",
title = "Automobile Drive by Class") +
theme_minimal()
ggplot(video_df,
aes(x = factor(category),
y = likes,
fill = factor(category))) +
geom_bar(stat = "identity",
position = "fill") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = "Hello"),
size = 3,
position = position_stack(vjust = 0.5)) +
scale_fill_brewer(palette = "Set2") +
labs(y = "Percent",
fill = "Drive Train",
x = "Class",
title = "Automobile Drive by Class") +
theme_minimal()
ggplot(video_df,
aes(x = factor(category),
y = likes,
fill = factor(category))) +
geom_bar(stat = "identity",
position = "fill") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = "Hello"),
size = 3,
position = position_stack(vjust = 0.5)) +
scale_fill_brewer(palette = "Set3") +
labs(y = "Percent",
fill = "Drive Train",
x = "Class",
title = "Automobile Drive by Class") +
theme_minimal()
ggplot(video_df,
aes(x = factor(category),
y = likes,
fill = factor(category))) +
geom_bar(stat = "identity",
position = "fill") +
scale_y_continuous(breaks = seq(0, 1, .2),
label = percent) +
geom_text(aes(label = "Hello"),
size = 3,
position = position_stack(vjust = 0.5)) +
scale_fill_brewer(palette = "Set4") +
labs(y = "Percent",
fill = "Drive Train",
x = "Class",
title = "Automobile Drive by Class") +
theme_minimal()
lm_output
knitr::kable(lm_output)
lm_output
summary(lm_output)
ggplot(video_df,
aes(x = comment_count,
y = likes)) +
geom_point(color= "steelblue") +
geom_smooth(method = "lm")
ggplot(video_df,
aes(x = log10(comment_count),
y = log10(likes)) +
geom_point(color= "steelblue") +
geom_smooth(method = "lm")
ggplot(video_df,
aes(x = log10(comment_count),
y = log10(likes))) +
geom_point(color= "steelblue") +
geom_smooth(method = "lm")
ggplot(video_df,
aes(x = log10(comment_count),
y = log10(likes))) +
geom_point(color= "steelblue") +
geom_smooth(method = "lm")
ggplot(video_df,
aes(x = log10(comment_count),
y = log10(likes))) +
geom_point(color= "steelblue") +
geom_smooth(method = "lm")+
labs(title="Relationship between Comment_count and Likes")
??labs
ggplot(video_df,
aes(x = log10(comment_count),
y = log10(likes))) +
geom_point(color= "steelblue") +
geom_smooth(method = "lm")+
labs(title="Relationship between Comment_count and Likes") +
xlab("Comment count") +
ylab("Likes")
ggplot(video_df,
aes(x = log10(comment_count),
y = log10(likes))) +
geom_point(color= "steelblue") +
geom_smooth(method = "lm")+
labs(title="Relationship between Comment_count and Likes (Scaled") +
xlab("Comment count") +
ylab("Likes")
comment_lm <- lm(comment_count ~ likes, video_df)
comment_lm
comment_lm <- lm(likes ~ comment_count, video_df)
comment_lm
summary(comment_lm)
multi_variate_lm <- lm(likes ~ comment_count + category.f, video_df)
multi_variate_lm <- lm(likes ~ comment_count + category.f, video_df)
multi_variate_lm
multi_variate_lm <- lm(log10(likes) ~ log10(comment_count) + category.f, video_df)
multi_variate_lm <- lm(likes ~ comment_count + views + dislikes, video_df)
multi_variate_lm
summary(multi_variate_lm)
View(video_df)
scatterplotMatrix(video_df[5:8])
??scatterplotMatrix
library("car")
install.packages("car")
library("car")
scatterplotMatrix(video_df[5:8])
library()
scatterplotMatrix(video_df[5:8])
